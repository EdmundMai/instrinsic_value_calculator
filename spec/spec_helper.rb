# This file was generated by the `rspec --init` command. Conventionally, all
# specs live under a `spec` directory, which RSpec adds to the `$LOAD_PATH`.
# Require this file using `require "spec_helper"` to ensure that it is only
# loaded once.
#
# See http://rubydoc.info/gems/rspec-core/RSpec/Core/Configuration
require_relative "../lib/data_retriever"
require File.join(File.dirname(__FILE__), '../application')
require 'webmock/rspec'
require 'sinatra'
require 'rspec'
require 'json'

Sinatra::Base.set :environment, :test
Sinatra::Base.set :run, false
Sinatra::Base.set :raise_errors, true
Sinatra::Base.set :logging, false

WebMock.disable_net_connect!(allow_localhost: true)

RSpec.configure do |config|
  config.treat_symbols_as_metadata_keys_with_true_values = true
  config.run_all_when_everything_filtered = true
  config.filter_run :focus

  response = {"query"=>{"count"=>1,"created"=>"2013-12-31T22=>41=>02Z","lang"=>"zh-cn","diagnostics"=>{"url"=>[{"execution-start-time"=>"0","execution-stop-time"=>"1","execution-time"=>"1","content"=>"http=>//datatables.org/alltables.env"},{"execution-start-time"=>"1","execution-stop-time"=>"2","execution-time"=>"1","content"=>"http=>//www.datatables.org/yahoo/finance/yahoo.finance.quotes.xml"},{"execution-start-time"=>"7","execution-stop-time"=>"71","execution-time"=>"64","content"=>"http=>//download.finance.yahoo.com/d/quotes.csv?f=aa2bb2b3b4cc1c3c6c8dd1d2ee1e7e8e9ghjkg1g3g4g5g6ii5j1j3j4j5j6k1k2k4k5ll1l2l3mm2m3m4m5m6m7m8nn4opp1p2p5p6qrr1r2r5r6r7ss1s7t1t7t8vv1v7ww1w4xy&s=msft"}],"publiclyCallable"=>"true","cache"=>{"execution-start-time"=>"6","execution-stop-time"=>"6","execution-time"=>"0","method"=>"GET","type"=>"MEMCACHED","content"=>"c7570b39f80748ad6afbbe8112eb8a8d"},"query"=>{"execution-start-time"=>"6","execution-stop-time"=>"71","execution-time"=>"65","params"=>"{url=[http=>//download.finance.yahoo.com/d/quotes.csv?f=aa2bb2b3b4cc1c3c6c8dd1d2ee1e7e8e9ghjkg1g3g4g5g6ii5j1j3j4j5j6k1k2k4k5ll1l2l3mm2m3m4m5m6m7m8nn4opp1p2p5p6qrr1r2r5r6r7ss1s7t1t7t8vv1v7ww1w4xy&s=msft]}","content"=>"select * from csv where url=@url and columns='Ask,AverageDailyVolume,Bid,AskRealtime,BidRealtime,BookValue,Change&PercentChange,Change,Commission,ChangeRealtime,AfterHoursChangeRealtime,DividendShare,LastTradeDate,TradeDate,EarningsShare,ErrorIndicationreturnedforsymbolchangedinvalid,EPSEstimateCurrentYear,EPSEstimateNextYear,EPSEstimateNextQuarter,DaysLow,DaysHigh,YearLow,YearHigh,HoldingsGainPercent,AnnualizedGain,HoldingsGain,HoldingsGainPercentRealtime,HoldingsGainRealtime,MoreInfo,OrderBookRealtime,MarketCapitalization,MarketCapRealtime,EBITDA,ChangeFromYearLow,PercentChangeFromYearLow,LastTradeRealtimeWithTime,ChangePercentRealtime,ChangeFromYearHigh,PercebtChangeFromYearHigh,LastTradeWithTime,LastTradePriceOnly,HighLimit,LowLimit,DaysRange,DaysRangeRealtime,FiftydayMovingAverage,TwoHundreddayMovingAverage,ChangeFromTwoHundreddayMovingAverage,PercentChangeFromTwoHundreddayMovingAverage,ChangeFromFiftydayMovingAverage,PercentChangeFromFiftydayMovingAverage,Name,Notes,Open,PreviousClose,PricePaid,ChangeinPercent,PriceSales,PriceBook,ExDividendDate,PERatio,DividendPayDate,PERatioRealtime,PEGRatio,PriceEPSEstimateCurrentYear,PriceEPSEstimateNextYear,Symbol,SharesOwned,ShortRatio,LastTradeTime,TickerTrend,OneyrTargetPrice,Volume,HoldingsValue,HoldingsValueRealtime,YearRange,DaysValueChange,DaysValueChangeRealtime,StockExchange,DividendYield'"},"javascript"=>{"execution-start-time"=>"5","execution-stop-time"=>"81","execution-time"=>"76","instructions-used"=>"67243","table-name"=>"yahoo.finance.quotes"},"user-time"=>"82","service-time"=>"66","build-version"=>"0.2.2090"},"results"=>{"quote"=>{"symbol"=>"MSFT","Ask"=>"37.50","AverageDailyVolume"=>"40854800","Bid"=>"37.45","AskRealtime"=>"37.50","BidRealtime"=>"37.45","BookValue"=>"9.782","Change_PercentChange"=>"+0.12 - +0.32%","Change"=>"+0.12","Commission"=>nil,"ChangeRealtime"=>"+0.12","AfterHoursChangeRealtime"=>"N/A - N/A","DividendShare"=>"0.97","LastTradeDate"=>"12/31/2013","TradeDate"=>nil,"EarningsShare"=>"2.671","ErrorIndicationreturnedforsymbolchangedinvalid"=>nil,"EPSEstimateCurrentYear"=>"2.67","EPSEstimateNextYear"=>"2.91","EPSEstimateNextQuarter"=>"0.00","DaysLow"=>"37.217","DaysHigh"=>"37.58","YearLow"=>"26.28","YearHigh"=>"38.98","HoldingsGainPercent"=>"- - -","AnnualizedGain"=>nil,"HoldingsGain"=>nil,"HoldingsGainPercentRealtime"=>"N/A - N/A","HoldingsGainRealtime"=>nil,"MoreInfo"=>"cn","OrderBookRealtime"=>nil,"MarketCapitalization"=>"312.3B","MarketCapRealtime"=>nil,"EBITDA"=>"31.367B","ChangeFromYearLow"=>"+11.13","PercentChangeFromYearLow"=>"+42.35%","LastTradeRealtimeWithTime"=>"N/A - <b>37.41</b>","ChangePercentRealtime"=>"N/A - +0.32%","ChangeFromYearHigh"=>"-1.57","PercebtChangeFromYearHigh"=>"-4.03%","LastTradeWithTime"=>"Dec 31 - <b>37.41</b>","LastTradePriceOnly"=>"37.41","HighLimit"=>nil,"LowLimit"=>nil,"DaysRange"=>"37.217 - 37.58","DaysRangeRealtime"=>"N/A - N/A","FiftydayMovingAverage"=>"37.4953","TwoHundreddayMovingAverage"=>"34.56","ChangeFromTwoHundreddayMovingAverage"=>"+2.85","PercentChangeFromTwoHundreddayMovingAverage"=>"+8.25%","ChangeFromFiftydayMovingAverage"=>"-0.0853","PercentChangeFromFiftydayMovingAverage"=>"-0.23%","Name"=>"Microsoft Corpora","Notes"=>nil,"Open"=>"37.33","PreviousClose"=>"37.29","PricePaid"=>nil,"ChangeinPercent"=>"+0.32%","PriceSales"=>"3.87","PriceBook"=>"3.81","ExDividendDate"=>"Nov 19","PERatio"=>"13.96","DividendPayDate"=>"Mar 13","PERatioRealtime"=>nil,"PEGRatio"=>"1.92","PriceEPSEstimateCurrentYear"=>"13.97","PriceEPSEstimateNextYear"=>"12.81","Symbol"=>"MSFT","SharesOwned"=>nil,"ShortRatio"=>"1.80","LastTradeTime"=>"4=>00pm","TickerTrend"=>"&nbsp;-=+-==&nbsp;","OneyrTargetPrice"=>"36.42","Volume"=>"17503520","HoldingsValue"=>nil,"HoldingsValueRealtime"=>nil,"YearRange"=>"26.28 - 38.98","DaysValueChange"=>"- - +0.32%","DaysValueChangeRealtime"=>"N/A - N/A","StockExchange"=>"NasdaqNM","DividendYield"=>"2.60","PercentChange"=>"+0.32%"}}}}.to_json
  config.before(:each) do
    stub_request(:get, /query.yahooapis.com/).
      with(headers: {'Accept'=>'*/*', 'User-Agent'=>'Ruby'}).
      to_return(status: 200, body: response, headers: {})
  end
  # Run specs in random order to surface order dependencies. If you find an
  # order dependency and want to debug it, you can fix the order by providing
  # the seed, which is printed after each run.
  #     --seed 1234
  config.order = 'random'
end
